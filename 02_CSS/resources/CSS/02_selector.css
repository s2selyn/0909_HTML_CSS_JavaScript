/* CSS 파일 이 문서 전체가 스타일 정보를 기술할 수 있는 영역 */
/* HTML의 스타일 태그 내부와 같다고 생각하면 됨 */

/* 1. 속성 선택자 */

/* div 요소들 중 name속성의 속성값이 name1과 "일치"하는 요소만 선택 */
/* div 요소들 중에서 고르고싶은거니까 먼저 div 요소들만 추려주려면 태그 선택자로 선택 */
/* 속성을 작성하기 위해 div 뒤에 대괄호를 작성하고 내부에 name속성과 속성값을 작성함, ""없어도 되긴함 */
div[name="name1"] {
    color: goldenrod;
}

/* 스타일 부여만 하고 html 파일과 css 파일이 연관이 없음, 연결해서 쓰려면 html 헤드영역으로 감 */
/* 똑같은것만 선택됨, name1을 포함하고 있는 애는 선택이 안되고 진짜 완전 똑같은 name1만 가진애만 선택됨 */

/* div 요소들 중 name속성의 속성값에 name1이 "포함"되어있는 요소만 선택 */
/* 먼저 전체 요소들 중 div를 고를거니까 div 먼저 작성하고 속성선택자 쓸거니까 대괄호, 속성 name 적고 포함시킬거니까 ~= 사용하고 속성값 */
div[name~="name1"] {
    /* 속성값이 정확하게 일치해야만 함 */
    background-color: lavender;
}

/* name이 포함된거라고 생각해서 name1 대신 name이라고 작성할수도 있지만 속성값이 정확하게 일치하는 애들만 선택됨
근데 이러고싶을수도 있잖아.. 다른거 해보자
*/

/* div요소들 중 class속성값에 i가 "포함"되어있는 요소만 선택 */
/* 똑같이 포함이긴 한데, 위에걸로는 속성값이 명확하게 처음부터 끝까지 일치하는 애들만 선택할 수 있었음 */
/* 이번에는 한글자만 가지고 속성값에 포함되어있는 친구들 전부다 선택해보자(사실 i가 다 들어있으니까 다 선택될것임 */
/* div로 div 태그들을 걸러냄, 클래스 속성을 볼건데 i가 포함된(앞뒤중상관없이)걸 찾을거니까 asterisk사용 *=으로 작성 */
div[class*="i"] {
    background-color: tomato;
}

/* 속성값 전체가 아니라 하나만 포함되어있어도 선택가능 */

/* div요소들 중 class속성값이 div로 "시작"하는 요소만 선택 */
/* 먼저 태그선택자로 div요소들만 걸러냄, 클래스속성값을 보고싶은거니까 class, |=로 작성하고 div */
div[class|=div] {
    color: crimson;
}

/* -가 기준임, -앞까지
띄어쓰기 자리에 - 또는 _ 으로 구분함
띄어쓰기는 속성값을 구분하게 됨
*/

/* 온전히 하나를 다 봐야겠다면? */
/* div요소들 중 name속성값이 name3으로 "시작"하는 요소만 선택 : ^ */
div[name^="name3"] {
    background-color: aliceblue;
}

/* 시작이 있으니까 끝도 있겠지 */
/* div요소들 중 class속성값이 ss로 "끝"나는 요소만 선택 : $*/
div[class$="ss"] {
    background-color: darkgreen;
}

/* CSS보다 JS에서 요소 선택해서 이벤트 달 때 쏠쏠함 */

/*
class속성값이 div-class인 요소들 중에서
name속성값에 name3이 "포함"되어있는 요소의 배경색 변경
*/
/*
기본선택자 네개 먼저 잘 쓰자
class선택자를 활용해서 써야지! 일단 기본선택자를 활용해서 먼저 깔고
뭘 해서 추려야하는지 쓰고나서 속성선택자가 필요하면 선택
*/
.div-class[name~="name3"] {
    background-color: mediumpurple;
}

/* 2. 자식선택자와 후손선택자 */
/* - 자식선택자 a>b: a요소의 자식들 중 b요소만을 선택 */

/* id속성값이 test1인 요소의 자식들 중에서 h4요소만 선택 */
/* 일단 id선택자를 먼저 써야함 # + id속성값 */
/* 자식요소를 선택하고싶은거니까 > */
/* 자식요소 많은데 그중에서 h4 선택하고싶은거니까 h4 */
#test1>h4 {
    color: rgb(35, 99, 200);
}

/* test1 후손들 중 div의 자식인 ul의 자식인 li만 고르고싶음 */
/* 후손선택자 a b : a요소의 후손(모든하위요소)들 중 b요소 선택 */
/* 아이디가 test1인 후손 중의 li 라고 작성하면?
div가 가지고 있는 모든 후손요소가 선택됨, 이렇게 말고
div의 자식인 ul의 자식 중에 li둘만 고르고 싶은데용
> 이걸 여러번 중첩해서 갈 수 있음
*/
#test1 li {
    background-color: firebrick;
}

/* id속성값이 test1인 요소의 자식들 중 ul요소의 자식들 중 li요소를 선택 */
/* 중첩해서 자식요소를 선택한 것에서 자식요소를 선택 */
#test1>ul>li {
    color: white;
}

/* 선택자는 이렇게 여러개의 선택자를 혼합해서 사용함 */
/* html은 화면이라서 엄청 자주 바뀌는 부분(중요하다고 생각한다면 하루에도 세번씩 바꿀 수 있음) */
/* id를 달아서 id선택자로 스타일을 부여했다면? */
#title {
    background-color: green;
}

/* first-child, last-child : 가상선택자 */
#test1>h4:first-child {
    color: rgb(141, 11, 44);
}

/* 이건 지금 적용안됨, 뭔가 잘못한듯, last-child 말고 last-of-type이면 원하는게 바뀌긴함 */
#test1>h4:last-child {
    color: rgb(78, 90, 10);
}

#test1>h4:nth-child(3) {
    background-color: black;
}

/* a + b : a요소 뒤에 있는 b요소 딱 하나만 선택 */

/* id속성값이 test2인 요소 뒤에있는 div요소 딱 하나만 선택 */
#test2+div {
    background-color: lightpink;
}

/* + 는 진짜 딱 바로뒤에있는걸 고르니까 이건안됨 */
/* #test2 + ul {
    color: red;
}
*/

/* 이렇게 해야함, 바로 앞에 있는 요소를 기준점으로 잡아줘야함 */
div+ul {
    color: red;
}

/* a ~ b : a요소 뒤에 있는 모든 b요소 선택 */
#test2~ul {
    color: rosybrown;
}

/* 단점은 이 아래에 있는 ul이 전부 선택되어 적용될것임 */

/* 반응 선택자 */
/* 일단 클래스 선택자로 스타일 부여 먼저 해보자 */
.area {
    width: 100px;
    height: 100px;
    background-color: palevioletred;
}

/* 클릭하고 있는 동안이 active */
#active-test:active {
    background-color: purple;
    cursor: pointer;
}

/* 호버도 해보자, 요소의 경계 안으로 들어가면 선택(hover)되는 것 */
#hover-test:hover {
    background-color: orangered;
    cursor: pointer;
}

/* 5. 상태 선택자 */
/* 체크박스 체크됐을 때 네모 키우고 싶다면 이렇게 */
input[type="checkbox"]:checked {
    width: 20px;
    height: 20px;
    /* 체크됐을 때 폰트 키우고 싶다면 이렇게? 아님ㅋ 선택을 체크박스로 해서 부여했잖앙, 글자는 라벨거(컨텐트)임 */
    font-size: 20px;
}

/* 라벨의 컨텐트를 선택해서 글자 크기를 키워야함, 어떻게 선택해?
체크박스를 체크했을 때 체크한 것만 글자 크기를 키우고싶음
체크박스를 체크했을 때 바로 뒤에 있는 라벨 하나를 키우고싶은것으로 작성
*/
input[type="checkbox"]:checked+label {
    font-size: 20px;
}

/* 그냥 이렇게 하면 항상 보라색 */
/* #input-el {
    background-color: purple;
}
*/

/* 이렇게 해야 focus 되면 보라보라! */
#input-el:focus {
    background-color: purple;
}

button:enabled {
    background-color: yellowgreen;
}

button:disabled {
    background-color: rgb(223, 124, 144);
}